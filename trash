#!/bin/bash

# 
# trash - Move files to the appropriate .Trash file on Mac OS X. (Intended
#         as an alternative to 'rm' which immediately deletes the file.)
# 
# v0.1   2007-05-21 - Morgan Aldridge <morgant@makkintosshu.com>
#                     Initial version.
# v0.2   2010-10-26 - Morgan Aldridge
#                     Use appropriate .Trashes folder when trashing files
#                     on other volumes. Create trash folder(s) if necessary.
# v0.2.1 2010-10-26 - Morgan Aldridge
#                     No longer using bash built-in regexp support in hopes
#                     of support Mac OS X 10.4 and earlier.
# v0.3   2010-12-07 - Morgan Aldridge
#                     Correctly handle full volume path which is root volume.
#                     Now increments filename if filename already exists in
#                     trash folder (Ã  la Finder).
# 

# TO DO:
# - Don't use .Trashes folder on root volume (check for symlink of volume to /)
# - Append an incremented number to the end of a filename, but before the file
#   extension, if a file with the same name already exists.

# global variables
verbose=false
help=false
user=$(whoami)
uid=$(id -u "$user")
v=''

# print usage instructions (help)
function usage() {
	printf "Usage: trash [options] file ...\n"
	printf "  -v		verbose output\n"
	printf "  -h		print these usage instructions\n"
}

# see if any arguments were passed in
if [ $# -gt 0 ]; then
	# if so, step through them all and process them
	while [ $# -gt 0 ]; do
		# see if the user intended us to run in verbose mode
		if [ "$1" = "-v" ]; then
			shift
			verbose=true
		# see if the user requested help
		elif [ "$1" = "-h" ]; then
			shift
			help=true
			usage
		# handle remaining arguments as if they were files
		else
			# don't bother doing anything if the user requested help
			if ! $help; then
				#printf "argument: '%s'\n" $1
				#printf "destination: '%s'\n" $TRASH
				if $verbose; then v="-v"; fi
				# determine whether we should be putting this in a volume-specific .Trashes or user's .Trash
				IFS=/ read -r -d '' _ _ vol _ <<< "$1"
				if [[ ("${1:0:9}" == "/Volumes/") && (-n "$vol") && ($(readlink "/Volumes/$vol") != "/") ]]; then
					trash="/Volumes/${vol}/.Trashes/${uid}/"
				else
					trash="/Users/${user}/.Trash/"
				fi
				# create the trash folder if necessary
				if [ ! -d "$trash" ]; then
					mkdir $v "$trash"
				fi
				# move the file to the trash
				if [ ! -e "${trash}$1" ]; then
					mv $v "$1" "$trash"
				else
					# determine if the filename has an extension
					ext=false
					case "$1" in
						*.*) ext=true ;;
					esac

					# keep incrementing a number to append to the filename to mimic Finder
					i=1
					if $ext; then
						new="${trash}${1%%.*} ${i}.${1##*.}"
					else
						new="${trash}$1 $i"
					fi
					while [ -e "$new" ]; do
						((i=$i + 1))
						if $ext; then
							new="${trash}${1%%.*} ${i}.${1##*.}"
						else
							new="${trash}$1 $i"
						fi
					done

					#move the file to the trash with the new name
					mv $v "$1" "$new"
				fi
			fi
			shift
		fi
	done
else
	printf "No files were specified to be moved to the trash.\n\n"
	usage
fi
